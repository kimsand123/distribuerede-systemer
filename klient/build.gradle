plugins {
    id 'java'
}

version 'unspecified'

//sourceCompatibility = 1.8

compileJava.options.encoding = "UTF-8"
//compileTestJava.options.encoding = "UTF-8"

repositories {
    mavenCentral()
}

dependencies {
    compile project(path: ':faelles')

    // SOAP - Java API for XML Web Services
    compile group: 'javax.xml.ws', name: 'jaxws-api', version: '2.3.1'

    // REST-klient: Unirest
    implementation 'com.konghq:unirest-java:3.4.03'

    // REST-klient: JAX-RS
    compile group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '2.25'

    // JSON simpel parser
    compile group: 'org.json', name: 'json', version: '20180813'


    // REST-server: Javalin
    compile 'io.javalin:javalin:3.7.0'
    compile "org.slf4j:slf4j-simple:1.7.28" // Nødvendig til javalin
    // JSON-parser Jackson
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.1'


    //testCompile group: 'junit', name: 'junit', version: '4.12'
}


jar {
    // Hvis JAR-filen skal have specificeret en main-metode så man kan starte den med java -jar klient.jar
    manifest {
        attributes "Main-Class": "brugerautorisation.transport.rmi.Brugeradminklient"
    }

    // Lav en 'fat JAR' hvor alle biblioteker er pakket med i JAR-filen
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
